import os
import getpass
from datetime import datetime
from usuarios.usuarios import usuario_logado, eh_admin, registrar_log, usuarios_cadastrados, salvar_usuarios

# ========== CONFIGURA√á√ïES ==========
COR_SUCESSO = "\033[1;32m"
COR_ERRO = "\033[1;31m"
COR_TITULO = "\033[1;36m"
COR_ALERTA = "\033[1;33m"
RESET_COR = "\033[0m"

# ========== FUN√á√ïES PRINCIPAIS ==========
def tela_seguranca():
    """Menu completo de seguran√ßa"""
    while True:
        print(f"\n{COR_TITULO}=== SEGURAN√áA E PRIVACIDADE ===")
        print("1. üîí Pol√≠ticas de Seguran√ßa")
        print("2. üîë Alterar minha senha")
        
        if eh_admin():
            print(f"{COR_ALERTA}3. ‚ö†Ô∏è Relat√≥rio de Acessos Suspeitos{RESET_COR}")
            print(f"{COR_ALERTA}4. üõ°Ô∏è For√ßar Troca de Senha (ADM){RESET_COR}")
        
        print("0. ‚Ü© Voltar")
        print("="*40 + RESET_COR)
        
        opcao = input("Escolha: ").strip()

        if opcao == '1':
            mostrar_politicas()
        elif opcao == '2':
            alterar_senha()
        elif opcao == '3' and eh_admin():
            relatorio_acessos()
        elif opcao == '4' and eh_admin():
            forcar_troca_senha()
        elif opcao == '0':
            break
        else:
            print(f"{COR_ERRO}‚ùå Op√ß√£o inv√°lida!{RESET_COR}")
            input("Pressione Enter para continuar...")

# ========== FUN√á√ïES DE SEGURAN√áA ==========
def mostrar_politicas():
    """Exibe as pol√≠ticas de seguran√ßa"""
    print(f"\n{COR_TITULO}=== POL√çTICAS DE SEGURAN√áA ===")
    print(f"{COR_SUCESSO}‚Ä¢ Senhas criptografadas e protegidas")
    print("‚Ä¢ Conformidade com LGPD (Lei 13.709/2018)")
    print("‚Ä¢ Registro de todas as atividades cr√≠ticas")
    print("‚Ä¢ Autentica√ß√£o obrigat√≥ria para opera√ß√µes sens√≠veis")
    print("‚Ä¢ N√≠vel de acesso baseado em permiss√µes")
    print(f"‚Ä¢ Auditoria peri√≥dica dos sistemas{RESET_COR}")
    input("\nPressione Enter para voltar...")

def alterar_senha():
    """Permite ao usu√°rio alterar sua pr√≥pria senha"""
    if not usuario_logado:
        print(f"{COR_ERRO}‚ö†Ô∏è Fa√ßa login primeiro!{RESET_COR}")
        return

    print(f"\n{COR_TITULO}=== ALTERAR SENHA ===")
    
    # Verifica senha atual
    senha_atual = getpass.getpass("Senha atual: ")
    if usuarios_cadastrados[usuario_logado['nome']]['senha'] != senha_atual:
        print(f"{COR_ERRO}‚ùå Senha atual incorreta!{RESET_COR}")
        return

    # Pede nova senha 2x
    nova_senha = getpass.getpass("Nova senha: ")
    confirmacao = getpass.getpass("Confirme a nova senha: ")

    if nova_senha != confirmacao:
        print(f"{COR_ERRO}‚ùå As senhas n√£o coincidem!{RESET_COR}")
        return

    # Atualiza no sistema
    usuarios_cadastrados[usuario_logado['nome']]['senha'] = nova_senha
    salvar_usuarios()
    registrar_log("Senha alterada", f"Usu√°rio: {usuario_logado['nome']}")
    print(f"\n{COR_SUCESSO}‚úÖ Senha atualizada com sucesso!{RESET_COR}")
    input("Pressione Enter para voltar...")

# ========== FUN√á√ïES ADMINISTRATIVAS ==========
def relatorio_acessos():
    """Gera relat√≥rio de acessos suspeitos (apenas ADM)"""
    print(f"\n{COR_ALERTA}=== ACESSOS SUSPEITOS ===")
    print("1. üìÖ √öltimos 30 dias")
    print("2. üîç Buscar por usu√°rio")
    print("0. ‚Ü© Voltar")
    
    opcao = input("Escolha: ").strip()
    # Implemente a l√≥gica de relat√≥rios aqui
    print(f"{COR_SUCESSO}Relat√≥rio gerado com sucesso!{RESET_COR}")
    input("Pressione Enter para voltar...")

def forcar_troca_senha():
    """For√ßa um usu√°rio a trocar a senha no pr√≥ximo login (apenas ADM)"""
    print(f"\n{COR_ALERTA}=== FOR√áAR TROCA DE SENHA ===")
    from usuarios.usuarios import listar_usuarios
    listar_usuarios()
    
    usuario = input("\nNome do usu√°rio: ").strip()
    if usuario in usuarios_cadastrados:
        usuarios_cadastrados[usuario]['precisa_trocar_senha'] = True
        salvar_usuarios()
        registrar_log("For√ßou troca de senha", f"ADM: {usuario_logado['nome']} | Usu√°rio: {usuario}")
        print(f"\n{COR_SUCESSO}‚úÖ Usu√°rio precisar√° trocar a senha no pr√≥ximo login!{RESET_COR}")
    else:
        print(f"{COR_ERRO}‚ùå Usu√°rio n√£o encontrado!{RESET_COR}")
    input("Pressione Enter para voltar...")